diff -urN libnss-pgsql-1.3-o/conf/nss-pgsql-root.conf libnss-pgsql-1.3/conf/nss-pgsql-root.conf
--- libnss-pgsql-1.3-o/conf/nss-pgsql-root.conf	1969-12-31 17:00:00.000000000 -0700
+++ libnss-pgsql-1.3/conf/nss-pgsql-root.conf	2005-11-17 00:17:21.000000000 -0700
@@ -0,0 +1,8 @@
+#----------------- DB connection
+host             = 10.194.3.95
+# For socket give the directory to put the socket
+#host            = /tmp
+port             = 5432
+database         = gforge
+login            = gforge_privileged
+passwd           = rootpass
diff -urN libnss-pgsql-1.3-o/src/config.c libnss-pgsql-1.3/src/config.c
--- libnss-pgsql-1.3-o/src/config.c	2005-03-03 10:30:20.000000000 -0700
+++ libnss-pgsql-1.3/src/config.c	2005-11-17 00:19:42.000000000 -0700
@@ -17,6 +17,7 @@
 #define HASHMAX 150
 #define CFGLINEMAX 256
 #define CFGFILE SYSCONFDIR"/nss-pgsql.conf"
+#define CFGFILEROOT SYSCONFDIR"/nss-pgsql-root.conf"
 
 static char *_options[HASHMAX];
 static unsigned int _isopen = 0;
@@ -38,20 +39,33 @@
 }
 
 /*
- * read configfile and save values in hashtable
+ * read configfile(s) and save values in hashtable
  */
 int readconfig(void)
 {
+	int ret;
+	ret = readconfig_with_name(CFGFILE, 1);
+	if(geteuid() == 0) {
+		ret = readconfig_with_name(CFGFILEROOT, 2);
+	}
+	return ret;
+}
+
+/*
+ * read configfile specified and save values in hashtable
+ */
+int readconfig_with_name(const char *filename, int olevel)
+{
 	FILE *cf;
 	char line[CFGLINEMAX], key[CFGLINEMAX], val[CFGLINEMAX], *c;
 	unsigned int h;
 	unsigned int lineno = 0;
 
-	if(_isopen)
+	if(_isopen > olevel)
 		return 1;
 	
-	if(!(cf = fopen(CFGFILE, "r"))) {
-		print_msg("could not open config file " CFGFILE "\n");
+	if(!(cf = fopen(filename, "r"))) {
+		print_msg("could not open config file %s\n", filename);
 		return 0;
 	}
 
@@ -69,7 +83,7 @@
 
 		/* read options */
 		if(sscanf(line, " %s = %[^\n]", key, val) < 2) {
-			print_err("line %d in " CFGFILE " is unparseable: \"%s\"\n", lineno, line);
+			print_err("line %d in %s is unparseable: \"%s\"\n", lineno, filename, line);
 		} else {
 			h = texthash(key);
 			_options[h] = malloc(strlen(val)+1);
@@ -78,7 +92,7 @@
 	}
 	fclose(cf);
 
-	_isopen = 1;
+	_isopen = _isopen + 1;
 	atexit(cleanup);
 
 	return 1;
